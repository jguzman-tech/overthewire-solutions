;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2019 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2019-12-22 15:52:06
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x8048374 -- 0x8048397
0x8048374:   53                     	push ebx
0x8048375:   83 ec 08               	sub esp, 8
0x8048378:   e8 f3 00 00 00         	call 0x8048470 <__x86.get_pc_thunk.bx>
0x804837d:   81 c3 83 1c 00 00      	add ebx, 0x1c83
0x8048383:   8b 83 fc ff ff ff      	mov eax, dword ptr [ebx - 4]
0x8048389:   85 c0                  	test eax, eax
0x804838b:   74 05                  	je 0x8048392 <_init+0x1e>
0x804838d:   e8 9e 00 00 00         	call 0x8048430 <function_8048430>
0x8048392:   83 c4 08               	add esp, 8
0x8048395:   5b                     	pop ebx
0x8048396:   c3                     	ret 
; section: .plt
; data inside code section at 0x80483a0 -- 0x80483b0
0x80483a0:   ff 35 04 a0 04 08 ff 25  08 a0 04 08 00 00 00 00   |.5.....%........|
; function: function_80483b0 at 0x80483b0 -- 0x80483b6
0x80483b0:   ff 25 0c a0 04 08      	jmp dword ptr [0x804a00c] <strcmp>
; data inside code section at 0x80483b6 -- 0x80483c0
0x80483b6:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_80483c0 at 0x80483c0 -- 0x80483c6
0x80483c0:   ff 25 10 a0 04 08      	jmp dword ptr [0x804a010] <printf>
; data inside code section at 0x80483c6 -- 0x80483d0
0x80483c6:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_80483d0 at 0x80483d0 -- 0x80483d6
0x80483d0:   ff 25 14 a0 04 08      	jmp dword ptr [0x804a014] <getchar>
; data inside code section at 0x80483d6 -- 0x80483e0
0x80483d6:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; function: function_80483e0 at 0x80483e0 -- 0x80483e6
0x80483e0:   ff 25 18 a0 04 08      	jmp dword ptr [0x804a018] <geteuid>
; data inside code section at 0x80483e6 -- 0x80483f0
0x80483e6:   68 18 00 00 00 e9 b0 ff  ff ff                     |h.........      |
; function: function_80483f0 at 0x80483f0 -- 0x80483f6
0x80483f0:   ff 25 1c a0 04 08      	jmp dword ptr [0x804a01c] <puts>
; data inside code section at 0x80483f6 -- 0x8048400
0x80483f6:   68 20 00 00 00 e9 a0 ff  ff ff                     |h ........      |
; function: function_8048400 at 0x8048400 -- 0x8048406
0x8048400:   ff 25 20 a0 04 08      	jmp dword ptr [0x804a020] <system>
; data inside code section at 0x8048406 -- 0x8048410
0x8048406:   68 28 00 00 00 e9 90 ff  ff ff                     |h(........      |
; function: function_8048410 at 0x8048410 -- 0x8048416
0x8048410:   ff 25 24 a0 04 08      	jmp dword ptr [0x804a024] <setreuid>
; data inside code section at 0x8048416 -- 0x8048420
0x8048416:   68 30 00 00 00 e9 80 ff  ff ff                     |h0........      |
; function: function_8048420 at 0x8048420 -- 0x8048426
0x8048420:   ff 25 28 a0 04 08      	jmp dword ptr [0x804a028] <__libc_start_main>
; data inside code section at 0x8048426 -- 0x8048430
0x8048426:   68 38 00 00 00 e9 70 ff  ff ff                     |h8....p...      |
; section: .plt.got
; function: function_8048430 at 0x8048430 -- 0x8048436
0x8048430:   ff 25 fc 9f 04 08      	jmp dword ptr [0x8049ffc] <__gmon_start__>
; data inside code section at 0x8048436 -- 0x8048438
0x8048436:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048440 -- 0x8048462
0x8048440:   31 ed                  	xor ebp, ebp
0x8048442:   5e                     	pop esi
0x8048443:   89 e1                  	mov ecx, esp
0x8048445:   83 e4 f0               	and esp, 0xfffffff0
0x8048448:   50                     	push eax
0x8048449:   54                     	push esp
0x804844a:   52                     	push edx
0x804844b:   68 70 86 04 08         	push 0x8048670
0x8048450:   68 10 86 04 08         	push 0x8048610
0x8048455:   51                     	push ecx
0x8048456:   56                     	push esi
0x8048457:   68 3b 85 04 08         	push 0x804853b
0x804845c:   e8 bf ff ff ff         	call 0x8048420 <function_8048420>
0x8048461:   f4                     	hlt 
; data inside code section at 0x8048462 -- 0x8048470
0x8048462:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048470 -- 0x8048474
0x8048470:   8b 1c 24               	mov ebx, dword ptr [esp]
0x8048473:   c3                     	ret 
; data inside code section at 0x8048474 -- 0x8048480
0x8048474:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x8048480 -- 0x80484ab
0x8048480:   b8 37 a0 04 08         	mov eax, 0x804a037
0x8048485:   2d 34 a0 04 08         	sub eax, 0x804a034
0x804848a:   83 f8 06               	cmp eax, 6
0x804848d:   76 1a                  	jbe 0x80484a9 <deregister_tm_clones+0x29>
0x804848f:   b8 00 00 00 00         	mov eax, 0
0x8048494:   85 c0                  	test eax, eax
0x8048496:   74 11                  	je 0x80484a9 <deregister_tm_clones+0x29>
0x8048498:   55                     	push ebp
0x8048499:   89 e5                  	mov ebp, esp
0x804849b:   83 ec 14               	sub esp, 0x14
0x804849e:   68 34 a0 04 08         	push 0x804a034
0x80484a3:   ff d0                  	call eax
0x80484a5:   83 c4 10               	add esp, 0x10
0x80484a8:   c9                     	leave 
0x80484a9:   f3 c3                  	ret 
; data inside code section at 0x80484ab -- 0x80484b0
0x80484ab:   90 8d 74 26 00                                     |..t&.           |
; function: register_tm_clones at 0x80484b0 -- 0x80484e5
0x80484b0:   b8 34 a0 04 08         	mov eax, 0x804a034
0x80484b5:   2d 34 a0 04 08         	sub eax, 0x804a034
0x80484ba:   c1 f8 02               	sar eax, 2
0x80484bd:   89 c2                  	mov edx, eax
0x80484bf:   c1 ea 1f               	shr edx, 0x1f
0x80484c2:   01 d0                  	add eax, edx
0x80484c4:   d1 f8                  	sar eax, 1
0x80484c6:   74 1b                  	je 0x80484e3 <register_tm_clones+0x33>
0x80484c8:   ba 00 00 00 00         	mov edx, 0
0x80484cd:   85 d2                  	test edx, edx
0x80484cf:   74 12                  	je 0x80484e3 <register_tm_clones+0x33>
0x80484d1:   55                     	push ebp
0x80484d2:   89 e5                  	mov ebp, esp
0x80484d4:   83 ec 10               	sub esp, 0x10
0x80484d7:   50                     	push eax
0x80484d8:   68 34 a0 04 08         	push 0x804a034
0x80484dd:   ff d2                  	call edx
0x80484df:   83 c4 10               	add esp, 0x10
0x80484e2:   c9                     	leave 
0x80484e3:   f3 c3                  	ret 
; data inside code section at 0x80484e5 -- 0x80484f0
0x80484e5:   8d 74 26 00 8d bc 27 00  00 00 00                  |.t&...'....     |
; function: __do_global_dtors_aux at 0x80484f0 -- 0x804850e
0x80484f0:   80 3d 34 a0 04 08 00   	cmp byte ptr [0x804a034], 0
0x80484f7:   75 13                  	jne 0x804850c <__do_global_dtors_aux+0x1c>
0x80484f9:   55                     	push ebp
0x80484fa:   89 e5                  	mov ebp, esp
0x80484fc:   83 ec 08               	sub esp, 8
0x80484ff:   e8 7c ff ff ff         	call 0x8048480 <deregister_tm_clones>
0x8048504:   c6 05 34 a0 04 08 01   	mov byte ptr [0x804a034], 1
0x804850b:   c9                     	leave 
0x804850c:   f3 c3                  	ret 
; data inside code section at 0x804850e -- 0x8048510
0x804850e:   66 90                                              |f.              |
; function: frame_dummy at 0x8048510 -- 0x804853b
0x8048510:   b8 10 9f 04 08         	mov eax, 0x8049f10
0x8048515:   8b 10                  	mov edx, dword ptr [eax]
0x8048517:   85 d2                  	test edx, edx
0x8048519:   75 05                  	jne 0x8048520 <frame_dummy+0x10>
0x804851b:   eb 93                  	jmp 0x80484b0 <register_tm_clones>
; data inside code section at 0x804851d -- 0x8048520
0x804851d:   8d 76 00                                           |.v.             |
0x8048520:   ba 00 00 00 00         	mov edx, 0
0x8048525:   85 d2                  	test edx, edx
0x8048527:   74 f2                  	je 0x804851b <frame_dummy+0xb>
0x8048529:   55                     	push ebp
0x804852a:   89 e5                  	mov ebp, esp
0x804852c:   83 ec 14               	sub esp, 0x14
0x804852f:   50                     	push eax
0x8048530:   ff d2                  	call edx
0x8048532:   83 c4 10               	add esp, 0x10
0x8048535:   c9                     	leave 
0x8048536:   e9 75 ff ff ff         	jmp 0x80484b0 <register_tm_clones>
; function: main at 0x804853b -- 0x8048604
0x804853b:   8d 4c 24 04            	lea ecx, [esp + 4]
0x804853f:   83 e4 f0               	and esp, 0xfffffff0
0x8048542:   ff 71 fc               	push dword ptr [ecx - 4]
0x8048545:   55                     	push ebp
0x8048546:   89 e5                  	mov ebp, esp
0x8048548:   53                     	push ebx
0x8048549:   51                     	push ecx
0x804854a:   83 ec 20               	sub esp, 0x20
0x804854d:   c7 45 f0 73 65 78 00   	mov dword ptr [ebp - 0x10], 0x786573
0x8048554:   c7 45 e9 73 65 63 72   	mov dword ptr [ebp - 0x17], 0x72636573
0x804855b:   66 c7 45 ed 65 74      	mov word ptr [ebp - 0x13], 0x7465
0x8048561:   c6 45 ef 00            	mov byte ptr [ebp - 0x11], 0
0x8048565:   c7 45 e5 67 6f 64 00   	mov dword ptr [ebp - 0x1b], 0x646f67
0x804856c:   c7 45 e0 6c 6f 76 65   	mov dword ptr [ebp - 0x20], 0x65766f6c
0x8048573:   c6 45 e4 00            	mov byte ptr [ebp - 0x1c], 0
0x8048577:   83 ec 0c               	sub esp, 0xc
0x804857a:   68 90 86 04 08         	push 0x8048690 ; "password: "
0x804857f:   e8 3c fe ff ff         	call 0x80483c0 <function_80483c0>
0x8048584:   83 c4 10               	add esp, 0x10
0x8048587:   e8 44 fe ff ff         	call 0x80483d0 <function_80483d0>
0x804858c:   88 45 f4               	mov byte ptr [ebp - 0xc], al
0x804858f:   e8 3c fe ff ff         	call 0x80483d0 <function_80483d0>
0x8048594:   88 45 f5               	mov byte ptr [ebp - 0xb], al
0x8048597:   e8 34 fe ff ff         	call 0x80483d0 <function_80483d0>
0x804859c:   88 45 f6               	mov byte ptr [ebp - 0xa], al
0x804859f:   c6 45 f7 00            	mov byte ptr [ebp - 9], 0
0x80485a3:   83 ec 08               	sub esp, 8
0x80485a6:   8d 45 f0               	lea eax, [ebp - 0x10]
0x80485a9:   50                     	push eax
0x80485aa:   8d 45 f4               	lea eax, [ebp - 0xc]
0x80485ad:   50                     	push eax
0x80485ae:   e8 fd fd ff ff         	call 0x80483b0 <function_80483b0>
0x80485b3:   83 c4 10               	add esp, 0x10
0x80485b6:   85 c0                  	test eax, eax
0x80485b8:   75 2b                  	jne 0x80485e5 <main+0xaa>
0x80485ba:   e8 21 fe ff ff         	call 0x80483e0 <function_80483e0>
0x80485bf:   89 c3                  	mov ebx, eax
0x80485c1:   e8 1a fe ff ff         	call 0x80483e0 <function_80483e0>
0x80485c6:   83 ec 08               	sub esp, 8
0x80485c9:   53                     	push ebx
0x80485ca:   50                     	push eax
0x80485cb:   e8 40 fe ff ff         	call 0x8048410 <function_8048410>
0x80485d0:   83 c4 10               	add esp, 0x10
0x80485d3:   83 ec 0c               	sub esp, 0xc
0x80485d6:   68 9b 86 04 08         	push 0x804869b ; "/bin/sh"
0x80485db:   e8 20 fe ff ff         	call 0x8048400 <function_8048400>
0x80485e0:   83 c4 10               	add esp, 0x10
0x80485e3:   eb 10                  	jmp 0x80485f5 <main+0xba>
0x80485e5:   83 ec 0c               	sub esp, 0xc
0x80485e8:   68 a3 86 04 08         	push 0x80486a3 ; "Wrong password, Good Bye ..."
0x80485ed:   e8 fe fd ff ff         	call 0x80483f0 <function_80483f0>
0x80485f2:   83 c4 10               	add esp, 0x10
0x80485f5:   b8 00 00 00 00         	mov eax, 0
0x80485fa:   8d 65 f8               	lea esp, [ebp - 8]
0x80485fd:   59                     	pop ecx
0x80485fe:   5b                     	pop ebx
0x80485ff:   5d                     	pop ebp
0x8048600:   8d 61 fc               	lea esp, [ecx - 4]
0x8048603:   c3                     	ret 
; data inside code section at 0x8048604 -- 0x8048610
0x8048604:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: __libc_csu_init at 0x8048610 -- 0x804866d
0x8048610:   55                     	push ebp
0x8048611:   57                     	push edi
0x8048612:   56                     	push esi
0x8048613:   53                     	push ebx
0x8048614:   e8 57 fe ff ff         	call 0x8048470 <__x86.get_pc_thunk.bx>
0x8048619:   81 c3 e7 19 00 00      	add ebx, 0x19e7
0x804861f:   83 ec 0c               	sub esp, 0xc
0x8048622:   8b 6c 24 20            	mov ebp, dword ptr [esp + 0x20]
0x8048626:   8d b3 0c ff ff ff      	lea esi, [ebx - 0xf4]
0x804862c:   e8 43 fd ff ff         	call 0x8048374 <_init>
0x8048631:   8d 83 08 ff ff ff      	lea eax, [ebx - 0xf8]
0x8048637:   29 c6                  	sub esi, eax
0x8048639:   c1 fe 02               	sar esi, 2
0x804863c:   85 f6                  	test esi, esi
0x804863e:   74 25                  	je 0x8048665 <__libc_csu_init+0x55>
0x8048640:   31 ff                  	xor edi, edi
0x8048642:   8d b6 00 00 00 00      	lea esi, [esi]
0x8048648:   83 ec 04               	sub esp, 4
0x804864b:   ff 74 24 2c            	push dword ptr [esp + 0x2c]
0x804864f:   ff 74 24 2c            	push dword ptr [esp + 0x2c]
0x8048653:   55                     	push ebp
0x8048654:   ff 94 bb 08 ff ff ff   	call dword ptr [ebx + edi*4 - 0xf8]
0x804865b:   83 c7 01               	add edi, 1
0x804865e:   83 c4 10               	add esp, 0x10
0x8048661:   39 fe                  	cmp esi, edi
0x8048663:   75 e3                  	jne 0x8048648 <__libc_csu_init+0x38>
0x8048665:   83 c4 0c               	add esp, 0xc
0x8048668:   5b                     	pop ebx
0x8048669:   5e                     	pop esi
0x804866a:   5f                     	pop edi
0x804866b:   5d                     	pop ebp
0x804866c:   c3                     	ret 
; data inside code section at 0x804866d -- 0x8048670
0x804866d:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x8048670 -- 0x8048672
0x8048670:   f3 c3                  	ret 
; section: .fini
; function: _fini at 0x8048674 -- 0x8048688
0x8048674:   53                     	push ebx
0x8048675:   83 ec 08               	sub esp, 8
0x8048678:   e8 f3 fd ff ff         	call 0x8048470 <__x86.get_pc_thunk.bx>
0x804867d:   81 c3 83 19 00 00      	add ebx, 0x1983
0x8048683:   83 c4 08               	add esp, 8
0x8048686:   5b                     	pop ebx
0x8048687:   c3                     	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 0a 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  0a 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   46 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |F...............|
0x80481ec:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x80481fc:   2f 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |/...............|
0x804820c:   3e 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |>...............|
0x804821c:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x804822c:   37 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |7...............|
0x804823c:   5f 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |_........... ...|
0x804824c:   1f 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x804825c:   4d 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |M...............|
0x804826c:   0b 00 00 00 8c 86 04 08  04 00 00 00 11 00 10 00   |................|
0x804827c:   00                                                 |.               |
; section: .dynstr
0x804827c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804828c:   74 64 69 6e 5f 75 73 65  64 00 70 75 74 73 00 73   |tdin_used.puts.s|
0x804829c:   65 74 72 65 75 69 64 00  70 72 69 6e 74 66 00 67   |etreuid.printf.g|
0x80482ac:   65 74 63 68 61 72 00 73  79 73 74 65 6d 00 67 65   |etchar.system.ge|
0x80482bc:   74 65 75 69 64 00 73 74  72 63 6d 70 00 5f 5f 6c   |teuid.strcmp.__l|
0x80482cc:   69 62 63 5f 73 74 61 72  74 5f 6d 61 69 6e 00 5f   |ibc_start_main._|
0x80482dc:   5f 67 6d 6f 6e 5f 73 74  61 72 74 5f 5f 00 47 4c   |_gmon_start__.GL|
0x80482ec:   49 42 43 5f 32 2e 30 00  00                        |IBC_2.0..       |
; section: .gnu.version
0x80482f4:   00 00 02 00 02 00 02 00  02 00 02 00 02 00 00 00   |................|
0x8048304:   02 00 02 00 01 00 ??                               |......?         |
; section: .gnu.version_r
0x804830c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804831c:   10 69 69 0d 00 00 02 00  6e 00 00 00 00 00 00 00   |.ii.....n.......|
0x804832c:   fc                                                 |.               |
; section: .rel.dyn
0x804832c:   fc 9f 04 08 06 07 00 00  0c                        |.........       |
; section: .rel.plt
0x8048334:   0c a0 04 08 07 01 00 00  10 a0 04 08 07 02 00 00   |................|
0x8048344:   14 a0 04 08 07 03 00 00  18 a0 04 08 07 04 00 00   |................|
0x8048354:   1c a0 04 08 07 05 00 00  20 a0 04 08 07 06 00 00   |........ .......|
0x8048364:   24 a0 04 08 07 08 00 00  28 a0 04 08 07 09 00 00   |$.......(.......|
0x8048374:   53                                                 |S               |
; section: .rodata
0x8048688:   03 00 00 00 01 00 02 00                            |........        |
0x8048690:   70 61 73 73 77 6f 72 64  3a 20 00                  |password: .     |   "password: "
0x804869b:   2f 62 69 6e 2f 73 68 00                            |/bin/sh.        |   "/bin/sh"
0x80486a3:   57 72 6f 6e 67 20 70 61  73 73 77 6f 72 64 2c 20   |Wrong password, |   "Wrong password, Good Bye ..."
0x80486b3:   47 6f 6f 64 20 42 79 65  20 2e 2e 2e 00            |Good Bye ....   |
0x80486c0:   01                                                 |.               |
; section: .eh_frame_hdr
0x80486c0:   01 1b 03 3b 30 00 00 00  05 00 00 00 e0 fc ff ff   |...;0...........|
0x80486d0:   4c 00 00 00 70 fd ff ff  70 00 00 00 7b fe ff ff   |L...p...p...{...|
0x80486e0:   84 00 00 00 50 ff ff ff  b8 00 00 00 b0 ff ff ff   |....P...........|
0x80486f0:   04 01 00 00 14                                     |.....           |
; section: .eh_frame
0x80486f4:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x8048704:   1b 0c 04 04 88 01 00 00  20 00 00 00 1c 00 00 00   |........ .......|
0x8048714:   8c fc ff ff 90 00 00 00  00 0e 08 46 0e 0c 4a 0f   |...........F..J.|
0x8048724:   0b 74 04 78 00 3f 1a 3b  2a 32 24 22 10 00 00 00   |.t.x.?.;*2$"....|
0x8048734:   40 00 00 00 f8 fc ff ff  08 00 00 00 00 00 00 00   |@...............|
0x8048744:   30 00 00 00 54 00 00 00  ef fd ff ff c9 00 00 00   |0...T...........|
0x8048754:   00 44 0c 01 00 47 10 05  02 75 00 44 0f 03 75 78   |.D...G...u.D..ux|
0x8048764:   06 10 03 02 75 7c 02 b4  c1 0c 01 00 41 c3 41 c5   |....u|......A.A.|
0x8048774:   43 0c 04 04 48 00 00 00  88 00 00 00 90 fe ff ff   |C...H...........|
0x8048784:   5d 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |]....A....A....A|
0x8048794:   0e 10 86 04 41 0e 14 83  05 4e 0e 20 69 0e 24 44   |....A....N. i.$D|
0x80487a4:   0e 28 44 0e 2c 41 0e 30  4d 0e 20 47 0e 14 41 c3   |.(D.,A.0M. G..A.|
0x80487b4:   0e 10 41 c6 0e 0c 41 c7  0e 08 41 c5 0e 04 00 00   |..A...A...A.....|
0x80487c4:   10 00 00 00 d4 00 00 00  a4 fe ff ff 02 00 00 00   |................|
0x80487d4:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x8049f08:   10 85 04 08 f0                                     |.....           |
; section: .fini_array
0x8049f0c:   f0 84 04 08 00                                     |.....           |
; section: .jcr
0x8049f10:   00 00 00 00 01                                     |.....           |
; section: .dynamic
0x8049f14:   01 00 00 00 01 00 00 00  0c 00 00 00 74 83 04 08   |............t...|
0x8049f24:   0d 00 00 00 74 86 04 08  19 00 00 00 08 9f 04 08   |....t...........|
0x8049f34:   1b 00 00 00 04 00 00 00  1a 00 00 00 0c 9f 04 08   |................|
0x8049f44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x8049f54:   05 00 00 00 7c 82 04 08  06 00 00 00 cc 81 04 08   |....|...........|
0x8049f64:   0a 00 00 00 78 00 00 00  0b 00 00 00 10 00 00 00   |....x...........|
0x8049f74:   15 00 00 00 00 00 00 00  03 00 00 00 00 a0 04 08   |................|
0x8049f84:   02 00 00 00 40 00 00 00  14 00 00 00 11 00 00 00   |....@...........|
0x8049f94:   17 00 00 00 34 83 04 08  11 00 00 00 2c 83 04 08   |....4.......,...|
0x8049fa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x8049fb4:   fe ff ff 6f 0c 83 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x8049fc4:   f0 ff ff 6f f4 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x8049fd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x8049fe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x8049ff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x8049ffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804a000:   14 9f 04 08 00 00 00 00  00 00 00 00 b6 83 04 08   |................|
0x804a010:   c6 83 04 08 d6 83 04 08  e6 83 04 08 f6 83 04 08   |................|
0x804a020:   06 84 04 08 16 84 04 08  26 84 04 08 00            |........&....   |
; section: .data
0x804a02c:   00 00 00 00 00 00 00 00  00                        |.........       |
